.hsk.tagged_diagram: [<currentTiddler>tags[]field:icon[_my/images/icons/diagram]]
.hsk.tagged_exemplar: [<currentTiddler>tags[]field:icon[_my/images/icons/exemplar]]
.hsk.tagged_feature: [<currentTiddler>tags[]field:icon[_my/images/icons/feature]]
.hsk.tagged_topic: [<currentTiddler>tags[]field:icon[_my/images/icons/topic]]
created: 20200706105715084
modified: 20200708033639951
tags: Python
title: Dynamic Attributes
tmap.id: 27ef36f8-4bae-4ec5-a7a2-b1842c712fac
type: text/vnd.tiddlywiki

Why are they good? Why not just use the good old [[Dot Notation]]?

Suppose we want to see the full list of [[Methods|Method]] of some [[Object]]. We can do it like this:

```python
>>> [method for method in dir(obj) if callable(getattr(obj, method))]
```

We couldn't have done this with [[Dot Notation]], because what comes after the dot has to be explicitly written!

https://stackoverflow.com/questions/19123707/why-use-setattr-and-getattr-built-ins

https://medium.com/@pranaygore/using-getattr-setattr-delattr-hasattr-in-python-6d79c6f9fda3
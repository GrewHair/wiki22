.hsk.tagged_diagram: [<currentTiddler>tags[]field:icon[_my/images/icons/diagram]]
.hsk.tagged_exemplar: [<currentTiddler>tags[]field:icon[_my/images/icons/exemplar]]
.hsk.tagged_feature: [<currentTiddler>tags[]field:icon[_my/images/icons/feature]]
.hsk.tagged_topic: [<currentTiddler>tags[]field:icon[_my/images/icons/topic]]
created: 20200605190823922
modified: 20200605200630218
tags: [[Learning SQL by Alan Beaulieu]]
title: Defining Table Aliases
tmap.id: cf627baf-953c-4f5c-9bb6-e64140b59fee
type: text/vnd.tiddlywiki

When multiple [[Tables|Table]] are [[Joined|SQL Joins]] together in a single [[Query]], one needs a way to identify which [[Table]] one is referring to when you reference [[Columns|Column]] in the <$link to="SELECT">`SELECT`</$link>, `WHERE`, `GROUP BY`, `HAVING` and `ORDER BY` [[Clauses|SQL Query Clauses]] (i.e. all the clauses other than the `FROM` clause itself).

One has two choices when referencing a [[Table]] outside the `FROM` clause:

* Use [[Dot Notation]] with the entire [[Table]] name, such as `employee.emp_id`.
*><$codeblock code="SELECT employee.emp_id, employee.fname,
	employee.lname, department.name AS dept_name
FROM employee INNER JOIN department
	ON employee.dept_id = department.dept_id;
" language="sql"/>
* Assign each [[Table]] an [[Alias|SQL Aliases]] and use it throughout the query.
*><$codeblock code="SELECT e.emp_id, e.fname, e.lname,
	d.name dept_name
FROM employee e INNER JOIN department d
	ON e.dept_id = d.dept_id;
" language="sql"/>
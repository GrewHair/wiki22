.hsk.tagged_diagram: [<currentTiddler>tags[]field:icon[_my/images/icons/diagram]]
.hsk.tagged_exemplar: [<currentTiddler>tags[]field:icon[_my/images/icons/exemplar]]
.hsk.tagged_feature: [<currentTiddler>tags[]field:icon[_my/images/icons/feature]]
.hsk.tagged_topic: [<currentTiddler>tags[]field:icon[_my/images/icons/topic]]
created: 20200709172536343
modified: 20200709173223432
tags: Python [[Data Science from Scratch (Joel Grus)]]
title: Args and Kwargs
tmap.id: 63817165-9ccb-4ada-8b8e-4cab543e24b5
type: text/vnd.tiddlywiki

Suppose we want to create a [[Higher-order Function]] that returns double the output of whatever [[Function|Function (Programming)]] it takes.

The naiwe approach is:

```python
def doubler(f):
    def g(x):
		    return 2 * f(x)
    return g
```

but the problem is it breaks when `f` takes more than one argument:

```
TypeError: g() takes exactly 1 argument (2 given)
```

The solution is to use [[Args and Kwargs]]! It goes like this:

```python
def doubler_correct(f):
    """works no matter what kind of inputs f expects"""
    def g(*args, **kwargs):
        return 2 * f(*args, **kwargs)
    return g
```
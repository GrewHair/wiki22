.hsk.tagged_diagram: [<currentTiddler>tags[]field:icon[_my/images/icons/diagram]]
.hsk.tagged_exemplar: [<currentTiddler>tags[]field:icon[_my/images/icons/exemplar]]
.hsk.tagged_feature: [<currentTiddler>tags[]field:icon[_my/images/icons/feature]]
.hsk.tagged_topic: [<currentTiddler>tags[]field:icon[_my/images/icons/topic]]
created: 20200303210957476
modified: 20200325163916924
tags: [[Information Theory, Pattern Recognition, and Neural Networks (David MakKay, University of Cambridge)]] [[Coding Theory]]
title: Hamming(7,4) Coding
tmap.id: 341e06b9-7e75-482b-9b16-828c86217679
type: text/vnd.tiddlywiki

\define venn(v1 v2 v3 v4 v5 v6 v7 color)
<svg height="200pt" width="200pt">
  <circle cx="100" cy="160" r="80" stroke=currentColor stroke-width="3" fill="none" />
  <circle cx="180" cy="160" r="80" stroke=$color$ stroke-width="3" fill="none" />
  <circle cx="140" cy="90.71" r="80" stroke=$color$ stroke-width="3" fill="none" />
  <foreignObject x="50" y="160" width="200">$v7$</foreignObject>
  <foreignObject x="190" y="160" width="200">$v6$</foreignObject>
  <foreignObject x="120" y="40" width="200">$v5$</foreignObject>
  <foreignObject x="120" y="110" width="200">$v3$</foreignObject>
  <foreignObject x="120" y="170" width="200">$v4$</foreignObject>
  <foreignObject x="80" y="90" width="200">$v1$</foreignObject>
  <foreignObject x="170" y="90" width="200" color=$color$>$v2$</foreignObject>
</svg>
\end





It performs three parity checks.


*Encoding
*><$latex text="
s_1 s_2 s_3 s_4 \to s_1 s_2 s_3 s_4 \overbrace{t_5 t_6 t_7}, \quad\text{where} \\
t_5 \equiv s_1+s_2+s_3 \pmod 2 \\
t_6 \equiv s_2+s_3+s_4 \pmod 2 \\
t_7 \equiv s_1+s_3+s_4 \pmod 2
"/>
*>E.g.:
*>$$1000 \to 1000 \overbrace{101}$$
|<<venn S1 S2 S3 S4 t5 t6 t7 currentColor>> |<<venn 1 0 0 0 1 0 1 currentColor>>|


* Decoding
*>The parity inside a circle should be zero (i.e. all the bits inside any circle should sum up to an even number). Now let's imagine we sent 1000101, and r2 is received flipped (due to channel noise) - so we receive 1<span style="color:red">1</span>00101
*>The error detection rule is: //find the bit that lies in all the red circles and none of the green circles.//
*>In this case:
*>$$\displaystyle \hat t = 1{\color{grey}0}00101, \quad \hat s = 1{\color{grey}0}00$$

|<<venn R1 R2 R3 R4 r5 r6 r7 currentColor>> |<<venn 1 1 0 0 1 0 1 red>>|

This decoder can detect and correct any single-bit error, ''but'' if more then one flip occurs in one block, then $$\hat s \neq s$$.

It's probability of block error is:

$$P(\hat s \!\neq\! s) \;=\; 21f^2(1\!-\!f)^5 \;+\; 35f^3(1\!-\!f)^4 \;+\; 35f^4(1\!-\!f)^3 + ... \;\approx\; 21f^2 $$
